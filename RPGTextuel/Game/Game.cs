using RPGTextuel.Config;

namespace RPGTextuel.Game
{
    // Cette classe s'occupe de g√©rer la boucle de jeu.
    public static class Game
    {
        // Cette m√©thode demande √† l'utilisateur le nom pour son joueur
        private static string AskPlayerName()
        {
            // On demande le nom √† l'utilisateur.
            Console.Write("üê±‚Äçüèç Entrez le nom de votre h√©ros : ");
            return Console.ReadLine()?.Trim() ?? "";
        }

        // Cette m√©thode r√©cup√®re le nom du h√©ros du joueur
        private static string AskAndVerifyPlayerName()
        {
            // On initialise une variable name de type string.
            string name;

            // On initialise la variable pour savoir si le nom est valide.
            Boolean valid = false;

            do
            {
                // On demande le nom du joueur √† l'utilisateur 
                name = AskPlayerName();

                // On analyse si le nom est correct.
                valid = HandlePlayerName(name);

            } while (valid);

            return name;
        }

        // Cette m√©thode prend un nom en argument et v√©rifie qu'il est valide pour un joueur.
        private static Boolean HandlePlayerName(string name)
        {
            // Si le nom est vide ou null, on affiche un message et, on repose la question.
            if (GameUtils.IsNameNullOrWhiteSpace(name))
            {
                Console.WriteLine("‚ùå Le nom ne peut pas √™tre vide. R√©essayez.\n");
                return false;
            }
            else if (GameUtils.IsNameTooLong(name))
            {
                Console.WriteLine($"‚ùå Le nom ne peut pas d√©passer {GameConfig.MaxNameLength} R√©essayez.\n");
                return false;
            }
            else
            {
                return true;
            }
        }
    }
}